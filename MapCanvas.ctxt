#BlueJ class context
comment0.params=rows\ columns\ pixels\ cellValues
comment0.target=MapCanvas(int,\ int,\ int,\ int[][])
comment0.text=\n\ Inicializa\ el\ lienzo\ del\ mapa\ y\ lo\ preparamos\ para\ pintarle\ el\ mapa\ encima.\n\ \n\ @param\ rows\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\u00FAmero\ de\ lineas\ que\ tiene\ el\ mapa.\n\ @param\ columns\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\u00FAmero\ de\ columnas.\n\ @param\ pixels\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\u00FAmero\ de\ pixeles\ de\ ancho\ y\ alto\ de\ cada\ celda.\n
comment1.params=score
comment1.target=void\ setScore(int)
comment1.text=\n\ Establece\ la\ nueva\ puntuaci\u00F3n\n\ \n\ @param\ score\ \ \ \ \ \ \ \ \ \ \ \ \ La\ nueva\ puntuaci\u00F3n\n
comment10.params=
comment10.target=void\ gameOver()
comment10.text=\n\ Marca\ la\ bandera\ como\ fin\ de\ partida\ y\ repinta\ la\ pantalla\n
comment11.params=
comment11.target=void\ victory()
comment11.text=\n\ Marca\ la\ bandera\ como\ PacMan\ vencedor\ y\ repinta\ la\ pantalla\n
comment12.params=g2D
comment12.target=void\ paintGameOver(java.awt.Graphics2D)
comment12.text=\n\ Pintamos\ en\ pantalla\ fin\ de\ la\ partida\ por\ muerte\ de\ PacMan\n
comment13.params=g2D
comment13.target=void\ paintVictory(java.awt.Graphics2D)
comment13.text=\n\ Pintamos\ en\ la\ pantalla\ el\ mensaje\ de\ victoria\n
comment2.params=g
comment2.target=void\ paint(java.awt.Graphics)
comment2.text=\n\ Pinta\ el\ mapa\ inicial\ y\ guarda\ el\ contexto\ gr\u00E1fico\ para\ reutilizarlo\n\ \n\ @param\ g\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ contexto\ gr\u00E1fico\n
comment3.params=g
comment3.target=void\ paintPlayers(java.awt.Graphics)
comment3.text=\n\ pinta\ los\ personajes\n\n\ @param\ g\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ entorno\ gr\u00E1fico\n
comment4.params=newLocations
comment4.target=void\ setLocations(java.util.ArrayList)
comment4.text=\n\ \ Recoge\ los\ datos\ y\ ordena\ repintar\ el\ panel\n\ \n\ @param\ newLocations\ \ \ \ \ \ \ \ \ \ \ \ \ \ ArrayList\ con\ las\ nuevas\ posiciones.\n
comment5.params=row\ column
comment5.target=void\ cleanCell(int,\ int)
comment5.text=\n\ Limpia\ una\ celda\n\ \n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ Linea\ de\ la\ celda\ a\ limpiar\n\ @param\ column\ \ \ \ \ \ \ \ \ \ \ Columna\ de\ la\ celda\ a\ limpiar\ \n
comment6.params=row\ column
comment6.target=WallType\ getWallType(int,\ int)
comment6.text=\n\ Devuelve\ el\ tipo\ de\ muro\ que\ hay\ que\ pintar.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ TypeWall\ del\ muro\ a\ pintar.\n
comment7.params=row\ column
comment7.target=int\ simplifyDecimalValue(int,\ int)
comment7.text=\n\ Seg\u00FAn\ el\ entorno\ del\ muro\ pasamos\ el\ c\u00F3digo\ del\ tipo\ de\ muro\ a\ pintar\n\ \n\ @param\ row\ \ \ \ \ \ \ La\ linea\ de\ la\ celda\n\ @param\ column\ \ \ \ La\ columna\ de\ la\ celda\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ La\ referencia\ de\ tipo.\n
comment8.params=row\ column
comment8.target=java.lang.String\ getBinaryFromCell(int,\ int)
comment8.text=\n\ Devuelve\ un\ string\ con\ la\ representacion\ en\ binario\ del\ entorno\ de\ la\ celda.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ representacion\ en\ binario\ del\ entorno\ de\ la\ celda.\n
comment9.params=binary
comment9.target=int\ getDecimalValueFromBinary(java.lang.String)
comment9.text=\n\ Devuelve\ un\ entero\ con\ el\ valor\ decimal\ del\ binario\ pasado\ en\ un\ String\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ valor\ decimal\n
numComments=14
