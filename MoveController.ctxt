#BlueJ class context
comment0.params=map\ pixels\ player
comment0.target=MoveController(Map,\ int,\ GamePlayer)
comment0.text=\n\ Preparamos\ el\ controlador\ para\ poder\ empezar\ el\ juego,\ recibe\ el\ mapa\ que\ se\ ha\ creado\ \n\ previamente\ en\ el\ controlador\ de\ juego\n
comment1.params=key
comment1.target=void\ keyPressed(java.awt.event.KeyEvent)
comment1.text=\n\ Pasa\ a\ PacMan\ la\ tecla\ pulsada\n\ \n\ @param\ key\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ tecla\ pulsada\n
comment10.params=first\ second
comment10.target=boolean\ directionsValids(Phantom,\ Phantom)
comment10.text=\n\ Devuelve\ true\ si\ los\ personajes\ tienen\ direcciones\ validas\ para\ chocar\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ son\ direcciones\ de\ choque\n
comment11.params=player1\ player2
comment11.target=boolean\ checkTouch(Player,\ Player)
comment11.text=\n\ Devuelve\ true\ si\ los\ dos\ personajes\ han\ colisionado\n\ \n\ @param\ Player1\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Primer\ personaje\n\ @param\ Player2\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Segundo\ personaje\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ han\ colisionado,\ false\ si\ no\ lo\ han\ hecho\ \ \ \ \ \ \n
comment2.params=
comment2.target=int\ move()
comment2.text=\n\ Cada\ turno\ se\ actualizan\ los\ movimientos\ de\ los\ personajes,\ \n\ si\ PacMan\ come\ un\ punto\ devuelve\ true\ para\ actualizar\ el\ marcador\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ PacMan\ come\ punto,\ false\ si\ la\ celda\ est\u00E1\ vacia\n
comment3.params=phantom
comment3.target=boolean\ canExit(Phantom)
comment3.text=\n\ Devuelve\ si\ la\ salida\ de\ la\ casa\ de\ los\ fantasmas\ est\u00E1\ libre\n\ \n\ @param\ phantom\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ fantasma\ que\ quiere\ salir.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ est\u00E1\ libre,\ false\ si\ no.\n
comment4.params=player
comment4.target=int\ nextCell(Player)
comment4.text=\n\ Le\ pasa\ los\ valores\ de\ la\ nueva\ celda\ al\ jugador,\ si\ es\ PacMan\ y\ se\ come\ un\ punto\n\ devuelve\ el\ valor\ de\ la\ celda\n\ \n\ @param\ player\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ jugador\ que\ recibe\ la\ nueva\ celda\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ PacMan\ come\ un\ punto,\ false\ si\ no.\n
comment5.params=
comment5.target=void\ dinnerTime()
comment5.text=\n\ Pone\ a\ los\ fantasmas\ en\ el\ estado\ de\ "comestibles"\ y\ inicia\ el\ temporizador\ del\ tiempo\n\ en\ el\ que\ van\ a\ estar.\n
comment6.params=
comment6.target=java.util.ArrayList\ getPlayersLocation()
comment6.text=\n\ Devuelve\ un\ ArrayList\ con\ la\ posici\u00F3n\ y\ nombre\ de\ cada\ Personaje.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ un\ ArrayList\ con\ la\ posici\u00F3n\ y\ nombre\ de\ cada\ Personaje.\n
comment7.params=
comment7.target=java.awt.Point\ pacManPosition()
comment7.text=\n\ Devuelve\ un\ punto\ donde\ y\ es\ la\ linea\ donde\ se\ encuentra\ PacMan\ y\ x\ es\ la\ columna\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ un\ punto\ con\ la\ posici\u00F3n\ de\ PacMan\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment8.text=\n\ Una\ vez\ han\ pasado\ el\ tiempo\ en\ el\ que\ se\ puede\ comer\ a\ los\ fantasmas,\ estos\ vuelven\n\ a\ su\ estado\ normal\ y\ paramos\ el\ temporizador\n
comment9.params=
comment9.target=int\ checkCollisions()
comment9.text=\n\ Detecta\ y\ trata\ las\ colisiones\ entre\ los\ personajes,\ devuelve\ 0\ si\ PacMan\ ha\ sido\ comido\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 0\ si\ PacMan\ es\ capturado,\ 1\ si\ es\ un\ fantasma\ el\ capturado\n
numComments=12
