#BlueJ class context
comment0.params=row\ column\ exits\ direction\ name\ pixels\ delay
comment0.target=Phantom(int,\ int,\ java.lang.String,\ int,\ java.lang.String,\ int,\ int)
comment0.text=\n\ Constructor\ de\ la\ clase\ fantasma,\ solo\ se\ a\u00F1ade\ el\ nombre\ con\ respecto\n\ a\ la\ super\ clase\n\ \n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ linea\ de\ inicio\n\ @param\ column\ \ \ \ \ \ \ \ \ \ \ \ La\ columna\ inicial\n\ @param\ exits\ \ \ \ \ \ \ \ \ \ \ \ \ La\ cadena\ de\ texto\ con\ las\ salidas\ de\ la\ celda\n\ @param\ direction\ \ \ \ \ \ \ \ \ La\ direcci\u00F3n\ inicial\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nombre\ del\ fantasma\n\ @param\ pixels\ \ \ \ \ \ \ \ \ \ \ \ Largo\ y\ ancho\ de\ la\ celda\n\ @param\ delay\ \ \ \ \ \ \ \ \ \ \ \ \ Turnos\ de\ espera\ antes\ de\ empezar\n
comment1.params=isIt
comment1.target=void\ setIsEatable(boolean)
comment1.text=\n\ Modificador\ de\ isEatable\n\ \n\ @param\ isIt\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nuevo\ valor\n
comment10.params=
comment10.target=int\ getTotalPhotograms()
comment10.text=\n\ Devuelve\ el\ n\u00FAmero\ de\ fotogramas\ de\ los\ fantasmas\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\u00FAmero\ de\ fotogramas\n
comment11.params=row\ column
comment11.target=void\ calculateNextDirection(int,\ int)
comment11.text=\n\ Calcula\ la\ nueva\ direcci\u00F3n\ del\ fantasma\ siempre\ que\ sea\ posible.\ \n\ Recibe\ las\ coordenadas\ donde\ se\ encuentra\ PacMan\ para\ ser\ usadas\ por\ Blinky\ y\ Pinky\n\ \n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ linea\ donde\ se\ encuentra\ PacMan\n\ @param\ column\ \ \ \ \ \ \ \ \ \ \ \ La\ columna\ donde\ se\ encuentra\ PacMan\n
comment12.params=
comment12.target=void\ calculateToExit()
comment12.text=\n\ El\ fantasma\ busca\ la\ ruta\ para\ salir\ de\ casa\n
comment13.params=
comment13.target=void\ calculateNextRandomDirection()
comment13.text=\n\ Calcula\ una\ nueva\ direcci\u00F3n\ aleatoria,\ si\ no\ es\ v\u00E1lida\ escoge\ la\ siguiente\ en\n\ el\ sentido\ de\ las\ agujas\ del\ reloj\ hasta\ que\ encuentra\ una\ v\u00E1lida.\n
comment14.params=pacManRow
comment14.target=int\ calculateVerticalDirection(int)
comment14.text=\n\ Calcula\ una\ nueva\ direcci\u00F3n\ vertical\ seg\u00FAn\ donde\ est\u00E9\ PacMan.\n\ 0\ si\ PacMan\ est\u00E1\ m\u00E1s\ arriba\ del\ fantasma\n\ 2\ si\ est\u00E1\ m\u00E1s\ abajo\n\ -1\ si\ est\u00E1\ en\ la\ misma\ linea\n\ \n\ @param\ pacManRow\ \ \ \ \ \ \ \ \ La\ linea\ donde\ se\ encuentra\ PacMan\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ nueva\ direcci\u00F3n\n
comment15.params=pacManColumn
comment15.target=int\ calculateHorizontalDirection(int)
comment15.text=\n\ Calcula\ una\ nueva\ direcci\u00F3n\ horizontal\ seg\u00FAn\ donde\ est\u00E9\ PacMan.\n\ 1\ si\ PacMan\ est\u00E1\ a\ la\ derecha\ del\ fantasma\n\ 3\ si\ est\u00E1\ a\ la\ izquierda\n\ -1\ si\ est\u00E1\ en\ la\ misma\ columna\n\ \n\ @param\ pacManColumn\ \ \ \ \ \ La\ columna\ donde\ se\ encuentra\ PacMan\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ nueva\ direcci\u00F3n\n
comment16.params=
comment16.target=void\ hasBeenEaten()
comment16.text=\n\ Manda\ al\ fantasma\ comido\ a\ casa\ y\ lo\ inicializa\n
comment17.params=pacManRow\ pacManColumn
comment17.target=boolean\ isGoodCrossroad(int,\ int)
comment17.text=\n\ Indica\ si\ la\ encrucijada\ es\ ventajosa\ para\ el\ fantasma\n\ \n\ @param\ pacManRow\ \ \ \ \ \ \ \ \ La\ linea\ donde\ se\ encuentra\ PacMan\n\ @param\ pacManColumn\ \ \ \ \ \ La\ columna\ donde\ se\ encuentra\ PacMan\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ True\ si\ puede\ aprovechar\ la\ encrucijada,\ false\ si\ no\n
comment2.params=
comment2.target=boolean\ isEatable()
comment2.text=\n\ Devuelve\ el\ valor\ de\ isEatable\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ valor\ de\ isEatable\n
comment3.params=isIt
comment3.target=void\ setIsStuck(boolean)
comment3.text=\n\ Modificador\ de\ isStuck\n\ \n\ @param\ isIt\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nuevo\ valor\n
comment4.params=
comment4.target=boolean\ isStuck()
comment4.text=\n\ Devuelve\ el\ valor\ de\ isStuck\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ valor\ isStuck\n
comment5.params=
comment5.target=boolean\ isAtHome()
comment5.text=\n\ Devuelve\ el\ valor\ de\ isAtHome\n
comment6.params=
comment6.target=int\ getWidth()
comment6.text=\n\ Devuelve\ el\ ancho\ del\ fantasma\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ valor\ de\ WIDTH\n
comment7.params=
comment7.target=int\ getHeight()
comment7.text=\n\ Devuelve\ el\ alto\ del\ fantasma\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ valor\ de\ HEIGHT\n
comment8.params=
comment8.target=void\ swingDirection()
comment8.text=\n\ Da\ la\ vuelta\ al\ fantasma\n
comment9.params=
comment9.target=void\ nextMove()
comment9.text=\n\ Mueve\ al\ fantasma\ en\ la\ direcci\u00F3n\ indicada\ un\ paso\ y\ actualiza\ su\ fotograma\n
numComments=18
