#BlueJ class context
comment0.params=row\ column\ exits\ direction\ pixels
comment0.target=Player(int,\ int,\ java.lang.String,\ int,\ int)
comment0.text=\n\ Constructor\ la\ clase\ abstracta\ Player,\ para\ evitar\ que\ dos\ Players\ caigan\ \n\ en\ el\ mismo\ sitio\ se\ obliga\ a\ indicarles\ sus\ coordenadas\ en\ el\ mapa.\n\ As\u00ED\ mismo\ se\ les\ pasa\ las\ salidas\ de\ la\ celda\ y\ su\ direcci\u00F3n\ inicial.\n\ \n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ linea\ de\ inicio\n\ @param\ column\ \ \ \ \ \ \ \ \ \ \ \ La\ columna\ inicial\n\ @param\ exits\ \ \ \ \ \ \ \ \ \ \ \ \ La\ cadena\ de\ texto\ con\ las\ salidas\ de\ la\ celda\n\ @param\ direction\ \ \ \ \ \ \ \ \ La\ direcci\u00F3n\ inicial\n\ @param\ pixels\ \ \ \ \ \ \ \ \ \ \ \ Largo\ y\ ancho\ de\ las\ celdas\n
comment1.params=
comment1.target=int\ getWidth()
comment1.text=\n\ Ancho\ del\ personaje\n
comment10.params=
comment10.target=int\ getPixels()
comment10.text=\n\ Devuelve\ el\ n\u00FAmero\ de\ pixeles\ por\ celda\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ n\u00FAmero\ de\ pixeles\n
comment11.params=
comment11.target=void\ setUpLocation()
comment11.text=\n\ Genera\ y\ actualiza\ las\ coordenadas\ del\ jugador\ seg\u00FAn\ su\ posici\u00F3n\ en\ el\ mapa\n
comment12.params=exits
comment12.target=void\ setExits(java.lang.String)
comment12.text=\n\ Grabamos\ las\ salidas\ de\ la\ nueva\ celda\n\ \n\ @param\ exits\ \ \ \ \ \ \ \ \ \ \ \ \ Las\ nuevas\ salidas\ de\ la\ celda\n
comment13.params=x
comment13.target=void\ setX(double)
comment13.text=\n\ Indica\ la\ nueva\ posici\u00F3n\ x\ en\ el\ canvas\n\ \n\ @param\ x\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ nueva\ posici\u00F3n\ en\ el\ canvas\n
comment14.params=
comment14.target=int\ getX()
comment14.text=\n\ Devuelve\ la\ posici\u00F3n\ x\ en\ el\ canvas\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ posici\u00F3n\ x\n
comment15.params=y
comment15.target=void\ setY(double)
comment15.text=\n\ Indica\ la\ nueva\ posici\u00F3n\ y\ en\ el\ canvas\n\ \n\ @param\ y\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ nueva\ posici\u00F3n\ en\ el\ canvas\n
comment16.params=
comment16.target=int\ getY()
comment16.text=\n\ Devuelve\ la\ posici\u00F3n\ y\ en\ el\ canvas\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ posici\u00F3n\ y\n
comment17.params=name
comment17.target=void\ setName(java.lang.String)
comment17.text=\n\ Modifica\ el\ nombre\ del\ personaje\n\ \n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ nombre\ del\ personaje\n
comment18.params=
comment18.target=java.lang.String\ getName()
comment18.text=\n\ Devuelve\ el\ nombre\ del\ personaje.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ nombre\ del\ personaje.\n
comment19.params=
comment19.target=java.lang.String\ getImageName()
comment19.text=\n\ Devuelve\ el\ nombre\ de\ la\ imagen\ seg\u00FAn\ su\ fotograma.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ nombre\ de\ la\ imagen\ seg\u00FAn\ su\ fotograma.\n
comment2.params=
comment2.target=int\ getHeight()
comment2.text=\n\ Alto\ del\ personaje\n
comment20.params=direction
comment20.target=void\ setDirection(int)
comment20.text=\n\ Indica\ la\ nueva\ direcci\u00F3n\ del\ player\n\ \n\ @param\ direction\ \ \ \ \ \ \ \ \ la\ nueva\ direcci\u00F3n\n
comment21.params=
comment21.target=int\ getDirection()
comment21.text=\n\ Devuelve\ la\ direcci\u00F3n\ actual\ del\ player\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ direcci\u00F3n\ del\ player\n
comment22.params=
comment22.target=void\ nextPhotogram()
comment22.text=\n\ Cambia\ al\ siguiente\ fotograma\ del\ player\ y\ lo\ devuelve\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nuevo\ fotograma\n
comment23.params=pixels
comment23.target=void\ progress(double)
comment23.text=\n\ Modifica\ la\ posici\u00F3n\ seg\u00FAn\ la\ direcci\u00F3n.\n
comment24.params=newDirection
comment24.target=boolean\ isAValidDirection(int)
comment24.text=\n\ Devuelve\ si\ la\ direcci\u00F3n\ es\ v\u00E1lida\n\ \n\ @param\ newDirection\ \ \ \ \ \ la\ direcci\u00F3n\ donde\ se\ quiere\ ir.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ hay\ salida\ en\ esa\ direcci\u00F3n,\ false\ si\ no.\n
comment25.params=
comment25.target=boolean\ isCrossroad()
comment25.text=\n\ Devuelve\ si\ es\ una\ encrucijada\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ hay\ m\u00E1s\ de\ dos\ salidas,\ false\ en\ otro\ caso\n
comment26.params=
comment26.target=boolean\ isOutOfCellBounds()
comment26.text=\n\ Devuelve\ si\ est\u00E1\ fuera\ del\ dominio\ de\ su\ celda\n\n\ @param\ pixels\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ el\ ancho\ y\ alto\ en\ pixeles\ de\ la\ celda\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ est\u00E1\ fuera\ de\ la\ celda,\ false\ si\ est\u00E1\ dentro\n
comment3.params=
comment3.target=void\ nextMove()
comment3.text=\n\ Siguiente\ movimiento\n
comment4.params=
comment4.target=int\ getTotalPhotograms()
comment4.text=\n\ Devuelve\ el\ n\u00FAmero\ total\ de\ fotogramas\ por\ direcci\u00F3n\ de\ movimiento\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ total\ de\ fotogramas\n
comment5.params=
comment5.target=boolean\ isEatable()
comment5.text=\n\ Indica\ si\ puede\ ser\ comido\ o\ no.\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ true\ si\ puede\ serlo,\ false\ si\ no\n
comment6.params=row
comment6.target=void\ setRow(int)
comment6.text=\n\ Indica\ la\ nueva\ linea\ en\ el\ mapa\n\ \n\ @param\ row\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ nueva\ linea\n
comment7.params=
comment7.target=int\ getRow()
comment7.text=\n\ Devuelve\ la\ linea\ actual\ en\ el\ mapa\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ la\ linea\ actual.\n
comment8.params=column
comment8.target=void\ setColumn(int)
comment8.text=\n\ Indica\ la\ nueva\ columna\ en\ el\ mapa\n\ \n\ @param\ column\ \ \ \ \ \ \ \ \ \ \ \ La\ nueva\ columna\n
comment9.params=
comment9.target=int\ getColumn()
comment9.text=\n\ Devuelve\ la\ columna\ actual\ en\ el\ mapa\n\ \n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ La\ columna\ actual\n
numComments=27
